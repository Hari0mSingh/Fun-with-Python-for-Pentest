-------------------------------------------------------------------------
Chapter 2. The Network: Basics 
------------------------------ 
This chapter will give you some basics on Python networking using the socket[5] module. Along the
way, we’ll build clients, servers, and a TCP proxy; and then turn them into our very own netcat,
complete with command shell. This chapter is the foundation for subsequent chapters in which we
will build a host discovery tool, implement cross-platform sniffers, and create a remote trojan
framework. Let’s get started

Python Networking in a Paragraph
--------------------------------
Module => socket
his module exposes all of the necessary pieces to quickly write TCP and UDP clients and servers, use raw sockets, and so forth. For the purposes of
breaking in or maintaining access to target machines, this module is all you really need.

TCP Client
---------- => There have been countless times during penetration tests that I’ve needed to whip up a TCP client to test for services, send garbage data, fuzz, or any number of other task
tcpClient.py

UDP Client
---------- =>A Python UDP client is not much different than a TCP client; we need to make only two small changes to get it to send packets in UDP form.
udpClient.py


Again, we’re not looking to be superior network programmers; we want to be quick, easy, and
reliable enough to handle our day-to-day hacking tasks. Let’s move on to creating some simple
servers.

TCP Server => tcpServer.py
----------
Let’s start by creating a standard multi-threaded TCP server.


